---
networks:
  dns_backend:
    name: ${DEPLOYMENT_NAME}_dns_backend
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DNS_BACKEND_SUBNET}
          gateway: ${DNS_BACKEND_GATEWAY}

  dns_frontend:
    name: ${DEPLOYMENT_NAME}_dns_frontend
    driver: ipvlan
    driver_opts:
      ipvlan_mode: l2
      parent: ${PARENT_INTERFACE}
      com.docker.network.driver.mtu: 1500
      priority: 1
    ipam:
      driver: default
      config:
        - subnet: ${DNS_FRONTEND_SUBNET}
          gateway: ${DNS_FRONTEND_GATEWAY}
          ip_range: ${DNS_FRONTEND_IP_RANGE}

services:
  unbound:
    image: alpinelinux/unbound:${UNBOUND_VERSION:-latest}
    container_name: ${DEPLOYMENT_NAME}_unbound
    hostname: unbound-${DEPLOYMENT_NAME}
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./unbound/unbound.conf:/etc/unbound/unbound.conf:ro
      - ./unbound/access_lists.conf:/etc/unbound/access_lists.conf:ro
      - ./unbound/host_entries.conf:/etc/unbound/host_entries.conf:ro
    healthcheck:
      test: ["CMD", "unbound-control", "status"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: 10s
      start_interval: 3s
    networks:
      dns_backend:
        ipv4_address: ${UNBOUND_IP}
    deploy:
      resources:
        limits:
          memory: ${UNBOUND_MEMORY_LIMIT}
        reservations:
          memory: 128m
    labels:
      - "deployment=${DEPLOYMENT_NAME}"
      - "environment=${ENVIRONMENT}"
      - "service=unbound"

  adguard:
    image: adguard/adguardhome:${ADGUARD_VERSION:-latest}
    container_name: ${DEPLOYMENT_NAME}_adguard
    hostname: adguard-${DEPLOYMENT_NAME}
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - PUID=${PUID}
      - PGID=${PGID}
    extra_hosts:
      - "healthcheck.local=0.0.0.0"
    volumes:
      - ./adguard/config:/opt/adguardhome/conf
      - ./adguard/work:/opt/adguardhome/work
    healthcheck:
      test: ["CMD", "nslookup", "healthcheck.local", "127.0.0.1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: 10s
      start_interval: 3s
    networks:
      dns_backend:
        ipv4_address: ${ADGUARD_BACKEND_IP}
      dns_frontend:
        ipv4_address: ${ADGUARD_FRONTEND_IP}
    depends_on:
      - unbound
    deploy:
      resources:
        limits:
          memory: ${ADGUARD_MEMORY_LIMIT}
        reservations:
          memory: 256m
    labels:
      - "deployment=${DEPLOYMENT_NAME}"
      - "environment=${ENVIRONMENT}"
      - "service=adguard"
      - "traefik.enable=true"
      - "traefik.http.routers.adguard-${DEPLOYMENT_NAME}.rule=Host(`adguard-${DEPLOYMENT_NAME}.${LOCAL_DOMAIN}`)"

  adguard-sync:
    image: lscr.io/linuxserver/adguardhome-sync:${SYNC_VERSION:-latest}
    container_name: ${DEPLOYMENT_NAME}_adguard_sync
    hostname: adguard-sync-${DEPLOYMENT_NAME}
    ports:
      - "${ADGUARD_SYNC_PORT}:8080"
    environment:
      - TZ=${TIMEZONE}
      - PUID=${PUID}
      - PGID=${PGID}
      - ORIGIN_USERNAME=${ORIGIN_USERNAME}
      - ORIGIN_PASSWORD=${ORIGIN_PASSWORD}
      - REPLICA1_USERNAME=${REPLICA1_USERNAME}
      - REPLICA1_PASSWORD=${REPLICA1_PASSWORD}
      - API_USERNAME=${API_USERNAME}
      - API_PASSWORD=${API_PASSWORD}
      - CONFIGFILE=/config/adguardhome-sync.yaml
    profiles:
      - sync
      - monitoring
      - full
    volumes:
      - ./adguard-sync/adguardhome-sync.yaml:/config/adguardhome-sync.yaml
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "--output", "/dev/null", "-u", "${API_USERNAME}:${API_PASSWORD}", "http://127.0.0.1:8080/metrics"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: 10s
      start_interval: 3s
    networks:
      dns_backend:
    restart: unless-stopped
    depends_on:
      - adguard
    deploy:
      resources:
        limits:
          memory: ${SYNC_MEMORY_LIMIT}
        reservations:
          memory: 64m
    labels:
      - "deployment=${DEPLOYMENT_NAME}"
      - "environment=${ENVIRONMENT}"
      - "service=adguard-sync"
